.. _micrortpsgen_label:

Micro RTPS Gen
==============

*Micro RTPS Gen* is a Java application used to generate source code for the *eProsima Micro RTPS* software.

This tool is able to generate from a given IDL specification file, the C struct associated with the
Topic, as well as, the serialization and deserialization methods.
Also, it has the possibility of generate a sample demo that works with proposed topic.
As an example of the powerful of this tool, the following shows the source code generated from the ShapeDemo IDL file.

::

    // ShapeType.idl

    struct ShapeType {
        @key string color;
        long x;
        long y;
        long shapesize;
    };

If we will perform the following command: ::

   $ micrortpsgen ShapeType.idl

it will generate the following:

.. code-block:: C

    /*!
     * @file Shape.h
     * This header file contains the declaration of the described types in the IDL file.
     *
     * This file was generated by the tool gen.
     */

    #ifndef _ShapeType_H_
    #define _ShapeType_H_

    #include <string.h>
    #include <stdlib.h>
    #include <stdio.h>
    #include <unistd.h>
    #include <micrortps/client/xrce_client.h>

    /*!
     * @brief This class represents the structure ShapeType defined by the user in the IDL file.
     * @ingroup SHAPE
     */
    typedef struct ShapeType
    {
        char* color;
        int32_t x;
        int32_t y;
        int32_t shapesize;

    } ShapeType;

    static bool serialize_ShapeType_topic(MicroBuffer* writer, const ShapeType* topic)
    {
        serialize_sequence_char(writer, topic->color, strlen(topic->color) + 1);
        serialize_int32_t(writer, topic->x);
        serialize_int32_t(writer, topic->y);
        serialize_int32_t(writer, topic->shapesize);

        return writer->error == BUFFER_OK;
    }

    static bool deserialize_ShapeType_topic(MicroBuffer* reader, ShapeType* topic)
    {
        uint32_t size_color = 0;
        deserialize_sequence_char(reader, &topic->color, &size_color);
        deserialize_int32_t(reader, &topic->x);
        deserialize_int32_t(reader, &topic->y);
        deserialize_int32_t(reader, &topic->shapesize);

        return reader->error == BUFFER_OK;
    }

    static uint32_t size_of_ShapeType_topic(const ShapeType* topic)
    {
        uint32_t size = 0;

        size += 4 + get_alignment(size, 4) + strlen(topic->color) + 1;
        size += 4 + get_alignment(size, 4);
        size += 4 + get_alignment(size, 4);
        size += 4 + get_alignment(size, 4);

        return size;
    }

    static bool write_ShapeType(Session* session, ObjectId datawriter_id, StreamId stream_id, ShapeType* topic)
    {
        if (session == NULL)
        {
            return false;
        }

        bool result = false;
        uint32_t topic_size = size_of_ShapeType_topic(topic);
        MicroBuffer* topic_buffer = NULL;

        if (128 < stream_id)
        {
            topic_buffer = prepare_best_effort_stream_for_topic(&session->output_best_effort_stream, datawriter_id, topic_size);
        }
        else
        {
            topic_buffer = prepare_reliable_stream_for_topic(&session->output_reliable_stream, datawriter_id, topic_size);
        }

        if (topic_buffer != NULL)
        {
            result = serialize_ShapeType_topic(topic_buffer, topic);
        }

        return result;
    }

    #endif // _ShapeType_H_

*Micro RTPS Gen* is also able to generate both *Publisher* and *Subscriber* source code examples related with the Topic speficified in the IDL file through the following command: ::

    $ micrortpsgen -example <platform> <file.idl>

Installation
------------

For use *Micro RTPS Gen* you have to follow the next steps:

1. Install its dependencies:

    1.1 `Gradle <https://gradle.org/install/>`_.

    1.2 `Java JDK <http://www.oracle.com/technetwork/java/javase/downloads/index.html>`_.

2. Clone the code from the GitHub repository. ::

    $ git clone --recursive https://github.com/eProsima/micro-RTPS-gen.git
    $ cd micro-RTPS-gen

3. Build the code with Gradle. ::

    $ gradle build 

Usage
-----

::

    $ ./scripts/micrortpsgen -d <output dir> <file.idl>

At the present time, *Micro RTPS Gen* only supports Structs composed of integer, string, array and sequence types
even though it is planned to enhance the capabilities of the *Micro RTPS Gen* tool in a near future.
